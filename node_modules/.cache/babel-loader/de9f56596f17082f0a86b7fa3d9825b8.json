{"ast":null,"code":"var _jsxFileName = \"D:\\\\My React Projects work\\\\Formik, Router Assignment\\\\netflix-clone\\\\src\\\\components\\\\Login\\\\login.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Error } from \"../error/error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const loginSchema = Yup.object().shape({\n    email: Yup.string().email().required(\"Required\"),\n    password: Yup.string().required(\"Required\").min(8).required(\"Required\")\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\"\n    },\n    validationSchema: loginSchema,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login to your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          className: \"input-from\",\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-fields\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field em\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"email\",\n                onChange: formik.handleChange,\n                value: formik.values.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 17\n              }, this), formik.errors.email && formik.touched.email ? /*#__PURE__*/_jsxDEV(Error, {\n                error: formik.errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"field ps\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                onChange: formik.handleChange,\n                value: formik.values.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 17\n              }, this), formik.errors.password && formik.touched.password ? /*#__PURE__*/_jsxDEV(Error, {\n                error: formik.errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 19\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"submit\",\n            type: \"submit\",\n            value: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-link\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Don't have an account yet? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Join Netflix\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["D:/My React Projects work/Formik, Router Assignment/netflix-clone/src/components/Login/login.js"],"names":["React","useFormik","Yup","Error","Login","loginSchema","object","shape","email","string","required","password","min","formik","initialValues","validationSchema","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange","errors","touched"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Error } from \"../error/error\";\r\nexport const Login = () => {\r\n  const loginSchema = Yup.object().shape({\r\n    email: Yup.string().email().required(\"Required\"),\r\n    password: Yup.string().required(\"Required\").min(8).required(\"Required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: loginSchema,\r\n    onSubmit: (values) => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"login-background\">\r\n      <div className=\"login-card\">\r\n        <div className=\"card-info\"></div>\r\n        <div className=\"card-form\">\r\n          <h1>Login to your account</h1>\r\n          <form action=\"\" className=\"input-from\" onSubmit={formik.handleSubmit}>\r\n            <div className=\"form-fields\">\r\n              <div className=\"field em\">\r\n                <span>Username</span>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.email}\r\n                />\r\n                {formik.errors.email && formik.touched.email ? (\r\n                  <Error error={formik.errors.email} />\r\n                ) : null}\r\n              </div>\r\n\r\n              <div className=\"field ps\">\r\n                <span>Password</span>\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.password}\r\n                />\r\n                {formik.errors.password && formik.touched.password ? (\r\n                  <Error error={formik.errors.password} />\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            <input className=\"submit\" type=\"submit\" value=\"Log In\" />\r\n          </form>\r\n          <div className=\"login-link\">\r\n            <span>Don't have an account yet? </span>\r\n            <h5>Join Netflix</h5>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}