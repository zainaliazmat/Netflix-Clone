[{"C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\index.js":"1","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\reportWebVitals.js":"2","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\App.js":"3","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\hoc\\protectedRoute.js":"4","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\hoc\\home.js":"5","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\Context\\rootContext.js":"6","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\Login\\login.js":"7","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\detail-Page\\detailPage.js":"8","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\Signup\\signup.js":"9","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\Header\\header.js":"10","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\data.js":"11","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\add-movie-form\\movieform.js":"12","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\Screen-PopUp\\poup.js":"13","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\error\\error.js":"14","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\card\\index.js":"15"},{"size":517,"mtime":1662703418111,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1662703418127,"results":"18","hashOfConfig":"17"},{"size":1174,"mtime":1662703418096,"results":"19","hashOfConfig":"17"},{"size":532,"mtime":1662704103403,"results":"20","hashOfConfig":"17"},{"size":2856,"mtime":1662703418111,"results":"21","hashOfConfig":"17"},{"size":525,"mtime":1662703418096,"results":"22","hashOfConfig":"17"},{"size":3959,"mtime":1662703418111,"results":"23","hashOfConfig":"17"},{"size":1102,"mtime":1662703418111,"results":"24","hashOfConfig":"17"},{"size":6528,"mtime":1662703418111,"results":"25","hashOfConfig":"17"},{"size":1219,"mtime":1662703418111,"results":"26","hashOfConfig":"17"},{"size":2359,"mtime":1662703418111,"results":"27","hashOfConfig":"17"},{"size":3350,"mtime":1662703418111,"results":"28","hashOfConfig":"17"},{"size":474,"mtime":1662703418111,"results":"29","hashOfConfig":"17"},{"size":303,"mtime":1662703418111,"results":"30","hashOfConfig":"17"},{"size":2000,"mtime":1662703418111,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bfg1wh",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},"C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\index.js",[],"C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\reportWebVitals.js",[],"C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\App.js",["69","70","71","72"],"import React from \"react\";\r\nimport { Signup } from \"./components/Signup/signup\";\r\nimport { Login } from \"./components/Login/login\";\r\nimport { Home } from \"./hoc/home\";\r\nimport { DetailPage } from \"./components/detail-Page/detailPage\";\r\nimport ProtectedRoute from \"./hoc/protectedRoute\";\r\nimport RootContext from \"./Context/rootContext\";\r\nimport Header from \"./components/Header/header\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <RootContext>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <ProtectedRoute path=\"/home\">\r\n              <Home />\r\n            </ProtectedRoute>\r\n            <ProtectedRoute path=\"/detail:id\">\r\n              <Header>\r\n                <DetailPage />\r\n              </Header>\r\n            </ProtectedRoute>\r\n            <Route path=\"/signup\">\r\n              <Signup />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Login />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </RootContext>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\hoc\\protectedRoute.js",[],"C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\hoc\\home.js",[],"C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\Context\\rootContext.js",["73"],"import React, { useState } from \"react\";\r\n\r\nexport const RootContext = React.createContext();\r\n\r\nexport default ({ children }) => {\r\n  const [movie, setMovie] = useState(null);\r\n  const [user, setUser] = useState(\"null\");\r\n  const [signup, setSignup] = useState([]);\r\n  const defaultValues = {\r\n    movie,\r\n    setMovie,\r\n    user,\r\n    setUser,\r\n    signup,\r\n    setSignup,\r\n  };\r\n  console.log(signup);\r\n  return (\r\n    <RootContext.Provider value={defaultValues}>\r\n      {children}\r\n    </RootContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\Login\\login.js",["74","75","76","77","78","79","80","81"],"import React, { useContext, useState } from \"react\";\r\nimport \"./login.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Error } from \"../error/error\";\r\nimport { Popup } from \"../Screen-PopUp/poup\";\r\nimport { RootContext } from \"../../Context/rootContext\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\n\r\nexport const Login = () => {\r\n  const [popup, setPopup] = useState(false);\r\n  const { signup, setSignup } = useContext(RootContext);\r\n  const { user, setUser } = useContext(RootContext);\r\n  let history = useHistory();\r\n  const loginSchema = Yup.object().shape({\r\n    email: Yup.string().email().required(\"Required\"),\r\n    password: Yup.string().required(\"Required\").min(8).required(\"Required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: loginSchema,\r\n    onSubmit: (values) => {\r\n      verifySubmit(values);\r\n    },\r\n  });\r\n\r\n  const verifySubmit = (value) => {\r\n    let users = [...signup];\r\n    let filter = users.filter(\r\n      (user) => user.email === value.email && user.password === value.password\r\n    );\r\n    if (filter.length >= 1) {\r\n      localStorage.setItem(\"token\", \"B5~R'U7Bj2pG>za_1DPmr8ETEs\");\r\n      localStorage.setItem(\"username\", filter[0].firstname);\r\n      history.push(\"./home\");\r\n      return;\r\n    }\r\n    pop(\r\n      \"This email or passowrd does't match, Please register before login\",\r\n      true\r\n    );\r\n    return;\r\n  };\r\n\r\n  const pop = (massage, col) => {\r\n    setPopup({ value: true, msg: massage, color: col });\r\n    setTimeout(function () {\r\n      setPopup({ value: false, msg: \"\", color: \"\" });\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"su-li-background\">\r\n      {popup.value ? <Popup msg={popup.msg} color={popup.color} /> : null}\r\n      <div className=\"su-li-card\">\r\n        <div className=\"card-info\">\r\n          <h1>Unlimited movies, TV shows, and more.</h1>\r\n          <h2>Watch anywhere. Cancel anytime.</h2>\r\n          <h3>\r\n            Ready to watch? Create a new accont or login if you already have\r\n            one.\r\n          </h3>\r\n        </div>\r\n        <div className=\"wrapper-card-form\">\r\n          <div className=\"li-card-form\">\r\n            <h1>Login to your account</h1>\r\n            <form\r\n              action=\"\"\r\n              className=\"input-from\"\r\n              onSubmit={formik.handleSubmit}\r\n            >\r\n              <div className=\"li-form-fields\">\r\n                <div className=\"li-field \">\r\n                  <span>Username</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                  />\r\n                  {formik.errors.email && formik.touched.email ? (\r\n                    <Error error={formik.errors.email} />\r\n                  ) : null}\r\n                </div>\r\n\r\n                <div className=\"li-field \">\r\n                  <span>Password</span>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                  />\r\n                  {formik.errors.password && formik.touched.password ? (\r\n                    <Error error={formik.errors.password} />\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <input className=\"li-submit\" type=\"submit\" value=\"Log In\" />\r\n            </form>\r\n            <div className=\"login-link\">\r\n              <span>Don't have an account yet? </span>\r\n              <Link to=\"/signup\" className=\"su-li-link\">\r\n                Join Netflix\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\detail-Page\\detailPage.js",["82","83"],"import React, { useContext } from \"react\";\r\nimport \"./detailPage.css\";\r\nimport { RootContext } from \"../../Context/rootContext\";\r\n\r\nexport const DetailPage = (props) => {\r\n  const { movie, setMovie } = useContext(RootContext);\r\n  props = movie;\r\n  const { id, title, URL, releaseDate, timeDuration, gener, age } = props;\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"dp-card\">\r\n        <div className=\"dp-card-image\">\r\n          <img src={URL} alt=\"\" />\r\n        </div>\r\n\r\n        <div className=\"dp-card-detail\">\r\n          <div className=\"dp-h1-btn\">\r\n            <h1>{title}</h1>\r\n          </div>\r\n\r\n          <div className=\"dp-card-d1\">\r\n            <span>{releaseDate}</span>\r\n            <div className=\"dp-card-age-icon\">\r\n              <span>{age}</span>\r\n            </div>\r\n            <p>{timeDuration}</p>\r\n            <div className=\"dp-card-hd-icon\">\r\n              <span>HD</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"dp-card-d2\">\r\n            <span>{gener}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\Signup\\signup.js",["84","85","86","87","88"],"import React, { useContext, useState } from \"react\";\r\nimport \"./signup.css\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Error } from \"../error/error\";\r\nimport { Popup } from \"../Screen-PopUp/poup\";\r\nimport { RootContext } from \"../../Context/rootContext\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams,\r\n} from \"react-router-dom\";\r\n\r\nexport const Signup = () => {\r\n  const [popup, setPopup] = useState(false);\r\n  const { signup, setSignup } = useContext(RootContext);\r\n  const phoneRegExp =\r\n    /^((\\+92)|(0092))-{0,1}\\d{3}-{0,1}\\d{7}$|^\\d{11}$|^\\d{4}-\\d{7}$/;\r\n\r\n  const SignupSchema = Yup.object().shape({\r\n    firstname: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(20, \"Too Long!\")\r\n      .required(\"Required\"),\r\n    lastname: Yup.string()\r\n      .min(2, \"Too Short!\")\r\n      .max(20, \"Too Long!\")\r\n      .required(\"Required\"),\r\n    phonenumber: Yup.string()\r\n      .matches(phoneRegExp, \"Invalid Number\")\r\n      .required(\"Required\"),\r\n    email: Yup.string().email().required(\"Required\"),\r\n    password: Yup.string().required(\"Required\").min(8).required(\"Required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n      .required(\"Required\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstname: \"\",\r\n      lastname: \"\",\r\n      phonenumber: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n    },\r\n    validationSchema: SignupSchema,\r\n    onSubmit: (values) => {\r\n      let contain = verifySubmit(values);\r\n      if (contain) {\r\n        let users = [...signup];\r\n        users.push(values);\r\n        setSignup(users);\r\n        pop(\"Registered Successfully\", false);\r\n      }\r\n    },\r\n  });\r\n\r\n  const verifySubmit = (value) => {\r\n    let users = [...signup];\r\n    let filter = users.filter((user) => user.email === value.email);\r\n    if (filter.length >= 1) {\r\n      pop(\"You have already registed through this email\", true);\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const pop = (massage, col) => {\r\n    setPopup({ value: true, msg: massage, color: col });\r\n    setTimeout(function () {\r\n      setPopup({ value: false, msg: \"\", color: \"\" });\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"su-li-background\">\r\n      {popup.value ? <Popup msg={popup.msg} color={popup.color} /> : null}\r\n      <div className=\"su-li-card\">\r\n        <div className=\"card-info\">\r\n          <h1>Unlimited movies, TV shows, and more.</h1>\r\n          <h2>Watch anywhere. Cancel anytime.</h2>\r\n          <h3>\r\n            Ready to watch? Create a new accont or login if you already have\r\n            one.\r\n          </h3>\r\n        </div>\r\n        <div className=\"wrapper-card-form\">\r\n          <div className=\"card-form\">\r\n            <h1>Register</h1>\r\n            <form\r\n              action=\"\"\r\n              className=\"input-from\"\r\n              onSubmit={formik.handleSubmit}\r\n            >\r\n              <div className=\"form-fields\">\r\n                <div className=\"field fn\">\r\n                  <span>First Name</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"firstname\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.firstname}\r\n                  />\r\n\r\n                  {formik.errors.firstname && formik.touched.firstname ? (\r\n                    <Error error={formik.errors.firstname} />\r\n                  ) : null}\r\n                </div>\r\n\r\n                <div className=\"field ln\">\r\n                  <span>Last Name</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"lastname\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.lastname}\r\n                  />\r\n                  {formik.errors.lastname && formik.touched.lastname ? (\r\n                    <Error error={formik.errors.lastname} />\r\n                  ) : null}\r\n                </div>\r\n\r\n                <div className=\"field pn\">\r\n                  <span>Phone Number</span>\r\n                  <input\r\n                    type=\"tel\"\r\n                    name=\"phonenumber\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.phonenumber}\r\n                  />\r\n                  {formik.errors.phonenumber && formik.touched.phonenumber ? (\r\n                    <Error error={formik.errors.phonenumber} />\r\n                  ) : null}\r\n                </div>\r\n\r\n                <div className=\"field em\">\r\n                  <span>Email</span>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.email}\r\n                  />\r\n                  {formik.errors.email && formik.touched.email ? (\r\n                    <Error error={formik.errors.email} />\r\n                  ) : null}\r\n                </div>\r\n\r\n                <div className=\"field ps\">\r\n                  <span>Password</span>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.password}\r\n                  />\r\n                  {formik.errors.password && formik.touched.password ? (\r\n                    <Error error={formik.errors.password} />\r\n                  ) : null}\r\n                </div>\r\n\r\n                <div className=\"field cps\">\r\n                  <span>Confirm Password</span>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    onChange={formik.handleChange}\r\n                    value={formik.values.confirmPassword}\r\n                  />\r\n                  {formik.errors.confirmPassword &&\r\n                  formik.touched.confirmPassword ? (\r\n                    <Error error={formik.errors.confirmPassword} />\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n              <input className=\"submit\" type=\"submit\" value=\"Create Account\" />\r\n            </form>\r\n            <div className=\"login-link\">\r\n              <span>Already have an account? </span>\r\n              <Link to=\"/login\" className=\"su-li-link\">\r\n                Login\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\Header\\header.js",[],"C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\data.js",[],"C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\add-movie-form\\movieform.js",[],"C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\Screen-PopUp\\poup.js",["89"],"import React, { useState } from \"react\";\r\nimport \"./popup.css\";\r\nimport cx from \"classnames\";\r\n\r\nexport const Popup = ({ msg, color }) => {\r\n  return (\r\n    <div className=\"popup\">\r\n      <div className=\"popup-wrapper\">\r\n        <div className={cx({ popuparrow: true, popupcolor: color })}></div>\r\n        <div className={cx({ popupbanner: true, popupcolor: color })}>\r\n          <span className=\"popup-msg\">{msg}</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\error\\error.js",[],"C:\\Users\\zaina\\Documents\\GitHub\\Netflix-Clone\\src\\components\\card\\index.js",["90"],"import React, { useContext } from \"react\";\r\nimport \"./style.css\";\r\nimport { MdDelete, MdEdit } from \"react-icons/md\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { RootContext } from \"../../Context/rootContext\";\r\n\r\nexport const MovieCard = (props) => {\r\n  const history = useHistory();\r\n  const { movie, setMovie } = useContext(RootContext);\r\n  const { id, title, URL, releaseDate, timeDuration, gener, age } = props;\r\n  return (\r\n    <div className=\"card\">\r\n      <div\r\n        className=\"card-image\"\r\n        onClick={() => {\r\n          setMovie(props);\r\n          history.push(\"/detail:\" + id);\r\n        }}\r\n      >\r\n        <img src={URL} alt=\"\" />\r\n      </div>\r\n\r\n      <div className=\"card-detail\">\r\n        <div className=\"h1-btn\">\r\n          <span\r\n            onClick={() => {\r\n              setMovie(props);\r\n              history.push(\"/detail:\" + id);\r\n            }}\r\n          >\r\n            {title}\r\n          </span>\r\n          <div className=\"card-buttons\">\r\n            <div className=\"card-btn-ring card-edit-ring\">\r\n              <MdEdit className=\"card-btn \" onClick={() => props.edit(id)} />\r\n            </div>\r\n            <div className=\"card-btn-ring\">\r\n              <MdDelete\r\n                className=\"card-btn card-delete\"\r\n                onClick={() => props.delete(id)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          onClick={() => {\r\n            setMovie(props);\r\n            history.push(\"/detail:\" + id);\r\n          }}\r\n        >\r\n          <div className=\"card-d1\">\r\n            <span>{releaseDate}</span>\r\n            <div className=\"card-age-icon\">\r\n              <span>{age}</span>\r\n            </div>\r\n            <p>{timeDuration}</p>\r\n            <div className=\"card-hd-icon\">\r\n              <span>HD</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card-d2\">\r\n            <span>{gener}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"91","severity":1,"message":"92","line":13,"column":3,"nodeType":"93","messageId":"94","endLine":13,"endColumn":7},{"ruleId":"91","severity":1,"message":"95","line":14,"column":3,"nodeType":"93","messageId":"94","endLine":14,"endColumn":16},{"ruleId":"91","severity":1,"message":"96","line":15,"column":3,"nodeType":"93","messageId":"94","endLine":15,"endColumn":12},{"ruleId":"91","severity":1,"message":"97","line":16,"column":3,"nodeType":"93","messageId":"94","endLine":16,"endColumn":13},{"ruleId":"98","severity":1,"message":"99","line":5,"column":1,"nodeType":"100","endLine":23,"endColumn":3},{"ruleId":"91","severity":1,"message":"101","line":9,"column":20,"nodeType":"93","messageId":"94","endLine":9,"endColumn":26},{"ruleId":"91","severity":1,"message":"102","line":10,"column":3,"nodeType":"93","messageId":"94","endLine":10,"endColumn":9},{"ruleId":"91","severity":1,"message":"103","line":11,"column":3,"nodeType":"93","messageId":"94","endLine":11,"endColumn":8},{"ruleId":"91","severity":1,"message":"95","line":13,"column":3,"nodeType":"93","messageId":"94","endLine":13,"endColumn":16},{"ruleId":"91","severity":1,"message":"96","line":14,"column":3,"nodeType":"93","messageId":"94","endLine":14,"endColumn":12},{"ruleId":"91","severity":1,"message":"104","line":20,"column":19,"nodeType":"93","messageId":"94","endLine":20,"endColumn":28},{"ruleId":"91","severity":1,"message":"105","line":21,"column":11,"nodeType":"93","messageId":"94","endLine":21,"endColumn":15},{"ruleId":"91","severity":1,"message":"106","line":21,"column":17,"nodeType":"93","messageId":"94","endLine":21,"endColumn":24},{"ruleId":"91","severity":1,"message":"107","line":6,"column":18,"nodeType":"93","messageId":"94","endLine":6,"endColumn":26},{"ruleId":"91","severity":1,"message":"108","line":8,"column":11,"nodeType":"93","messageId":"94","endLine":8,"endColumn":13},{"ruleId":"91","severity":1,"message":"101","line":9,"column":20,"nodeType":"93","messageId":"94","endLine":9,"endColumn":26},{"ruleId":"91","severity":1,"message":"102","line":10,"column":3,"nodeType":"93","messageId":"94","endLine":10,"endColumn":9},{"ruleId":"91","severity":1,"message":"103","line":11,"column":3,"nodeType":"93","messageId":"94","endLine":11,"endColumn":8},{"ruleId":"91","severity":1,"message":"95","line":13,"column":3,"nodeType":"93","messageId":"94","endLine":13,"endColumn":16},{"ruleId":"91","severity":1,"message":"96","line":14,"column":3,"nodeType":"93","messageId":"94","endLine":14,"endColumn":12},{"ruleId":"91","severity":1,"message":"109","line":1,"column":17,"nodeType":"93","messageId":"94","endLine":1,"endColumn":25},{"ruleId":"91","severity":1,"message":"110","line":9,"column":11,"nodeType":"93","messageId":"94","endLine":9,"endColumn":16},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'useHistory' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'setSignup' is assigned a value but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","'setMovie' is assigned a value but never used.","'id' is assigned a value but never used.","'useState' is defined but never used.","'movie' is assigned a value but never used."]